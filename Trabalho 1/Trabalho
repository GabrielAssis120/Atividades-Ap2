#include <stdio.h>
#include <stdlib.h>

typedef struct{
char titulo[100];
char autor[50];
int ano;
}LIVRO;

typedef struct{
char nome[50];
char endereco[100];
int id;
}USUARIO;

typedef struct{
    LIVRO *livro;
    USUARIO *usuario;
    int tlivros;
    int tusuarios;
    int clivros;
    int cusuarios;
}BIBLIOTECA;

void addlivro(BIBLIOTECA *biblioteca){

if (biblioteca->tlivros<biblioteca->clivros){
    LIVRO nlivro;
    printf("Digite o titulo do livro:" );
    getchar();
    fgets(nlivro.titulo, sizeof(nlivro.titulo), stdin);
     nlivro.titulo[strcspn(nlivro.titulo, "\n")] = '\0';

      printf("Digite o autor do livro:" );
    getchar();
    fgets(nlivro.autor, sizeof(nlivro.autor), stdin);
     nlivro.autor[strcspn(nlivro.autor, "\n")] = '\0';

    printf("Digite o ano do livro: ");
    scanf("%d", &nlivro.ano);

     biblioteca->livro[biblioteca->tlivros++] = nlivro;
        printf("Livro adicionado!\n");

     } else {
        printf("Capacidade maxima de livros atingida!\n");
     }

       }
void addusuario(BIBLIOTECA *biblioteca) {
    if (biblioteca->tusuarios < biblioteca->cusuarios) {
        USUARIO nusuario;

        printf("Digite o nome de usuario: ");
        getchar();
        fgets(nusuario.nome, sizeof(nusuario.nome), stdin);
        nusuario.nome[strcspn(nusuario.nome, "\n")] = '\0';

 printf("Digite o endereço de usuario: ");
        fgets(nusuario.endereco, sizeof(nusuario.endereco), stdin);
        nusuario.endereco[strcspn(nusuario.endereco, "\n")] = '\0';

        printf("Digite o ID do usuario: ");
        scanf("%d", &nusuario.id);

          biblioteca->usuario[biblioteca->tusuarios++] = nusuario;
        printf("Usuario adicionado!\n");
    } else {
        printf("Capacidade maxima atingida!\n");
    }
}


void Llivros(BIBLIOTECA *biblioteca) {
    if (biblioteca->tlivros == 0) {
            printf("nem um livro cadastrado");
     } else {
        for (int i = 0; i < biblioteca->tlivros; i++) {
            printf("Livro %d:\n", i + 1);
            printf("Titulo: %s\n", biblioteca->livro[i].titulo);
            printf("Autor: %s\n", biblioteca->livro[i].autor);
            printf("Ano: %d\n\n", biblioteca->livro[i].ano);
        }
    }
}


void Lusuario (BIBLIOTECA *biblioteca){
if (biblioteca->tusuarios == 0) {
        printf("Nenhum usuario cadastrado.\n");
    } else {
        for (int i = 0; i < biblioteca->tusuarios; i++) {
            printf("Usuario %d:\n", i + 1);
            printf("Nome: %s\n", biblioteca->usuario[i].nome);
            printf("Endereço: %s\n", biblioteca->usuario[i].endereco);
            printf("ID: %d\n\n", biblioteca->usuario[i].id);
        }
    }
}

int BlivroR (LIVRO livro[],int inicio, int fim,const char* titulo){
if(inicio>fim){
    return -1;
}
 int meio = (inicio + fim) / 2;
     if (strcmp(livro[meio].titulo, titulo) == 0) {
        return meio;
    } else if (strcmp(livro[meio].titulo, titulo) < 0) {
        return BlivroR(livro, meio + 1, fim, titulo);
    } else {
        return BlivroR(livro, inicio, meio - 1, titulo);
    }
}

void Blivro(BIBLIOTECA *biblioteca)
{
    char tituloB[100];
    printf("Digite o titulo do livro que deseja buscar: ");
    getchar();
    fgets(tituloB, sizeof(tituloB), stdin);
    tituloB[strcspn(tituloB, "\n")] = '\0';

    int indice = BlivroR(biblioteca->livro, 0, biblioteca->tlivros - 1, tituloB);

    if (indice != -1) {
 printf("Livro encontrado:\n");
        printf("Titulo: %s\n", biblioteca->livro[indice].titulo);
        printf("Autor: %s\n", biblioteca->livro[indice].autor);
        printf("Ano: %d\n", biblioteca->livro[indice].ano);
    } else {
        printf("Livro nao encontrado.\n");
    }
}


int main() {

    int clivros = 100;
    int cusuarios = 100;

    BIBLIOTECA biblioteca;
    biblioteca.livro = (LIVRO *)malloc(clivros * sizeof(LIVRO));
    biblioteca.usuario = (USUARIO *)malloc(cusuarios * sizeof(USUARIO));
    biblioteca.tlivros = 0;
    biblioteca.tusuarios = 0;
    biblioteca.clivros = clivros;
    biblioteca.cusuarios = cusuarios;

    int opcao;

    do {
        printf("\nSistema de Biblioteca \n");
        printf("1. Adicionar Livro\n");
        printf("2. Adicionar Usuario\n");
        printf("3. Listar Livros\n");
        printf("4. Listar Usuarios\n");
        printf("5. Buscar Livro\n");
        printf("6. Sair\n");
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                addlivro(&biblioteca);
                break;
            case 2:
                addusuario(&biblioteca);
                break;
            case 3:
                Llivros(&biblioteca);
                break;
            case 4:
                Lusuario(&biblioteca);
                break;
            case 5:
                Blivro(&biblioteca);
                break;
            case 6:
                printf("Saindo\n");
                break;
            default:
                printf("Opção invalida.\n");
        }
    } while (opcao != 6);

    free(biblioteca.livro);
    free(biblioteca.usuario);
}
